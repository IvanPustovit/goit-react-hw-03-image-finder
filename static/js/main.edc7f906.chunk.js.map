{"version":3,"sources":["Components/Modal/Modal.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Searchbar/Searchbar.js","Components/Button/Button.js","Components/Main/Main.js","App.js","index.js"],"names":["Modal","largeImageURL","tags","closeModal","closeModalKey","closeModalWithKey","useCallback","e","key","useEffect","window","addEventListener","removeEventListener","className","onClick","src","alt","ImageGalleryItem","webformatURL","useState","modal","setModal","target","nodeName","ImageGallery","images","toggleModal","map","img","id","Searchbar","onSubmit","inputChange","type","autoComplete","autoFocus","placeholder","onChange","Button","currentPage","Main","setImages","name","setName","step","setStep","loader","setLoader","getImage","a","ursSearch","Axios","get","res","concat","data","hits","console","log","updateStep","scrollTo","top","document","documentElement","scrollHeight","behavior","preventDefault","value","color","height","width","timeout","length","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.edc7f906.chunk.js","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = ({ largeImageURL, tags, closeModal, closeModalKey }) => {\r\n  const closeModalWithKey = useCallback(\r\n    e => {\r\n      if (e.key === \"Escape\") {\r\n        closeModalKey();\r\n      }\r\n    },\r\n    [closeModalKey],\r\n  );\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", closeModalWithKey);\r\n  }, [closeModalWithKey]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", closeModalWithKey);\r\n    };\r\n  }, [closeModalWithKey]);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={closeModal}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt={tags} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  closeModalKey: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = e => {\r\n    setModal(!modal);\r\n  };\r\n  const closeModal = e => {\r\n    if (e.target.nodeName === \"IMG\") {\r\n      return;\r\n    }\r\n    setModal(!modal);\r\n  };\r\n\r\n  const closeModalKey = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      {modal && (\r\n        <Modal\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          closeModal={closeModal}\r\n          closeModalKey={closeModalKey}\r\n        />\r\n      )}\r\n\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={toggleModal}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ImageGallery.css\";\r\n\r\nconst ImageGallery = ({ images, toggleModal }) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(img => (\r\n          <ImageGalleryItem {...img} key={img.id} toggleModal={toggleModal} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Searchbar.css\";\r\n\r\nconst Searchbar = ({ onSubmit, inputChange }) => {\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"SearchForm-button\"\r\n            onClick={onSubmit}\r\n          >\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={inputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  inputChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ currentPage }) => {\r\n  return (\r\n    <button className=\"Button\" onClick={currentPage}>\r\n      Show more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  currentPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport Button from \"../Button/Button\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst key = \"13722015-1e14ecea112e19cd1d66141e7\";\r\nconst url = \"https://pixabay.com/api/\";\r\n\r\nconst Main = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [step, setStep] = useState(1);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const inputChange = e => {\r\n    setName(e.target.value);\r\n    setStep(1);\r\n    setImages([]);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    getImage(step);\r\n  };\r\n\r\n  const getImage = async step => {\r\n    setLoader(true);\r\n    const ursSearch = `${url}?q=${name}&page=${step}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n    try {\r\n      const res = await Axios.get(ursSearch);\r\n      setImages(images.concat(res.data.hits));\r\n    } catch (error) {\r\n      console.log(\"error\");\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const currentPage = async () => {\r\n    const updateStep = step + 1;\r\n    setStep(updateStep);\r\n    await getImage(updateStep);\r\n    scroll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onSubmit} inputChange={inputChange} />\r\n      {loader && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      )}\r\n      {!loader && <ImageGallery images={images} />}\r\n      {!!images.length && <Button currentPage={currentPage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\n// import Searchbar from \"./Components/Searchbar/Searchbar\";\nimport \"./App.css\";\nimport Main from \"./Components/Main/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}